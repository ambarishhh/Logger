#include "loggersettings.h"

using namespace logger;


/***************************************************************************************
**********************************LoggerSettings**************************************
***************************************************************************************/

logger::LoggerSettings::LoggerSettings(bool verbose, bool timestamp)
{
	SetConfiguration(verbose, timestamp);
}


/***************************************************************************************
**********************************LoggerSettings**************************************
***************************************************************************************/

logger::LoggerSettings::LoggerSettings(const LoggerSettings& input)
{
	verbose_ = input.verbose_.load();
	timeStamp_ = input.timeStamp_.load();
}


/***************************************************************************************
**********************************LoggerSettings**************************************
***************************************************************************************/

logger::LoggerSettings::LoggerSettings()
{
}


/***************************************************************************************
**********************************SetConfiguration**************************************
***************************************************************************************/

void logger::LoggerSettings::SetConfiguration(bool verbose, bool timestamp)
{
	verbose_ = verbose;
	timeStamp_ = timestamp;
}


/***************************************************************************************
**********************************SetFilePath**************************************
***************************************************************************************/

void LoggerSettings::SetFilePath(std::string filepath)
{
	if (filepath != "")
	{
		std::lock_guard<std::mutex> lg(filepathMutex_);
		filepath_ = filepath;
	}
	else
	{
		throw "Incorrect filepath set in the logger";
	}
}


/***************************************************************************************
**********************************GetConsolidatedFilePath**************************************
***************************************************************************************/

std::string LoggerSettings::GetConsolidatedFilePath()
{
	return consolidatedLogFilepath_;
}


/***************************************************************************************
**********************************GetFilePath**************************************
***************************************************************************************/

std::string LoggerSettings::GetFilePath()
{
	std::lock_guard<std::mutex> lg(filepathMutex_);
	return filepath_;
}


/***************************************************************************************
****************************************************************************************
***************************************************************************************/
